on:
  push:
    branches: [master, staging, trying]
    tags:
      - "v*.*.*"

name: Docker Build

jobs:
  docker-build:
    needs: [docker-builds]
    runs-on: ubuntu-latest
    steps:
      - name: Docker builds done
        run: exit 0
  docker-builds:
    name: Docker Build ${{ matrix.target }} ${{matrix.os}}  ${{matrix.toolchain}} 
    runs-on: ${{ matrix.os }}
    env:
      CARGO_NET_RETRY: 3
      CARGO_HTTP_CHECK_REVOKE: false
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
            runners: qemu-user qemu-system
          - target: arm-unknown-linux-gnueabi
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
          - target: arm-unknown-linux-gnueabihf
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
          - target: armv7-unknown-linux-gnueabihf
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
            runners: qemu-user qemu-system
          - target: i586-unknown-linux-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
          - target: i686-unknown-linux-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
            runners: native qemu-user qemu-system
          - target: mips-unknown-linux-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
            runners: qemu-user qemu-system
          - target: mipsel-unknown-linux-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
            runners: qemu-user qemu-system
          - target: mips64-unknown-linux-gnuabi64
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
          - target: mips64el-unknown-linux-gnuabi64
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
            runners: qemu-user qemu-system
          - target: powerpc-unknown-linux-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
            runners: qemu-user qemu-system
          - target: powerpc64-unknown-linux-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
            runners: qemu-user qemu-system
          - target: powerpc64le-unknown-linux-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
            runners: qemu-user qemu-system
          - target: riscv64gc-unknown-linux-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            std: 1
            run: 1
          - target: s390x-unknown-linux-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
            runners: qemu-system
          - target: sparc64-unknown-linux-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
            runners: qemu-system
          - target: x86_64-unknown-linux-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
            runners: native qemu-user qemu-system
            deploy: 1
            CRATES_IO_PUBLISH: 1
          - target: aarch64-unknown-linux-musl
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
            run: 1
          - target: arm-unknown-linux-musleabihf
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
            run: 1
          - target: arm-unknown-linux-musleabi
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
            run: 1
          - target: armv5te-unknown-linux-gnueabi
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
            run: 1
          - target: armv5te-unknown-linux-musleabi
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
            run: 1
          - target: armv7-unknown-linux-musleabihf
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
            run: 1
          - target: i586-unknown-linux-musl
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
            run: 1
          - target: i686-unknown-linux-musl
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
            run: 1
          - target: mips-unknown-linux-musl
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            std: 1
            run: 1
          - target: mipsel-unknown-linux-musl
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            std: 1
            run: 1
          - target: x86_64-unknown-linux-musl
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
            run: 1
            deploy: 1
          - target: aarch64-linux-android
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            std: 1
            run: 1
          - target: arm-linux-androideabi
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            std: 1
            run: 1
          - target: armv7-linux-androideabi
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            std: 1
            run: 1
          - target: i686-linux-android
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            std: 1
            run: 1
          - target: x86_64-linux-android
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            std: 1
            run: 1
          - target: x86_64-apple-darwin
            toolchain: 1.42.0
            os: macos-latest
            cpp: 1
            dylib: 1
            std: 1
            run: 1
            deploy: 1
          - target: x86_64-pc-windows-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            std: 1
            run: 1
          - target: i686-pc-windows-gnu
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            std: 1
            run: 1
          # Disabled, see #396
          # - target: x86_64-unknown-dragonfly
          #   toolchain: nightly
          #   os: ubuntu-latest
          #   cpp: 1
          #   dylib: 1
          - target: i686-unknown-freebsd
            toolchain: 1.42.0
            os: ubuntu-latest
            dylib: 1
            std: 1
          - target: x86_64-unknown-freebsd
            toolchain: 1.42.0
            os: ubuntu-latest
            dylib: 1
            std: 1
          - target: x86_64-unknown-netbsd
            toolchain: 1.42.0
            os: ubuntu-latest
            cpp: 1
            dylib: 1
            std: 1
          # Disabled, see #534
          # - target: sparcv9-sun-solaris
          #   toolchain: 1.42.0
          #   os: ubuntu-latest
          #   cpp: 1
          #   dylib: 1
          #   std: 1
          # - target: x86_64-sun-solaris
          #   toolchain: 1.42.0
          #   os: ubuntu-latest
          #   cpp: 1
          #   dylib: 1
          #   std: 1
          - target: asmjs-unknown-emscripten
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
            run: 1
          # `cargo run` fails with an assertion error (https://github.com/rust-lang/cargo/issues/4689) on `wasm32-unknown-emscripten`.
          - target: wasm32-unknown-emscripten
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
          - target: thumbv6m-none-eabi
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
          - target: thumbv7em-none-eabi
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
          - target: thumbv7em-none-eabihf
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
          - target: thumbv7m-none-eabi
            toolchain: 1.42.0
            os: ubuntu-latest
            std: 1
          - target: x86_64-pc-windows-msvc
            toolchain: 1.42.0
            os: windows-latest
            cpp: 1
            std: 1
            run: 1
            deploy: 1

    steps:
      - uses: actions/checkout@v2
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          default: true
          profile: minimal
      - run: echo "OS=${{ runner.os }}" >> $GITHUB_ENV
      - run: echo "BRANCH=${{ github.ref_name }}" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/heads/')
      - run: echo "TAG=${{ runner.os }}" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/tags/')
      - run: echo "TARGET=${{ matrix.target }}" >> $GITHUB_ENV
      - run: echo "CPP=${{ matrix.cpp }}" >> $GITHUB_ENV
      - run: echo "DYLIB=${{ matrix.dylib }}" >> $GITHUB_ENV
      - run: echo "STD=${{ matrix.std }}" >> $GITHUB_ENV
      - run: echo "RUN=${{ matrix.run }}" >> $GITHUB_ENV
      - run: echo "RUNNERS=${{ matrix.runners }}" >> $GITHUB_ENV
      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked
        timeout-minutes: 5
      - name: Build Docker image
        if: runner.os == 'Linux'
        timeout-minutes: 360
        run: ./build-docker-image.sh "${{ matrix.target }}"
      - name: Test
        run: ./ci/test.sh
      - name: Publish on crates.io
        if: startsWith(env.TAG, 'v') && matrix.CRATES_IO_PUBLISH == '1'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --dry-run
      - name: Create GitHub Release
        if: startsWith(env.TAG, 'v') && env.DEPLOY == '1'
        # TODO: Not sure what package to use for this step.
        run: echo "TODO"; exit 1
      - name: Login to GHCR
        if: (env.BRANCH == 'master' || startsWith(env.TAG, 'v')) && runner.os == 'Linux'
        run: echo "${ secrets.GITHUB_TOKEN }" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Push image to GHCR
        if: (env.BRANCH == 'master' || startsWith(env.TAG, 'v')) && runner.os == 'Linux'
        run: ./ci/docker_push.sh
